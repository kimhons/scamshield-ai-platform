import React, { useEffect, useState } from 'react'
import { useAuth } from '../../contexts/AuthContext'
import { useInvestigation } from '../../contexts/InvestigationContext'
import { useNavigate } from 'react-router-dom'
import { 
  Plus, TrendingUp, Shield, AlertTriangle, Eye, Search, 
  BarChart3, Clock, CheckCircle, XCircle, ArrowRight,
  Activity, Zap, Users, Globe
} from 'lucide-react'
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LineChart, Line, PieChart, Pie, Cell } from 'recharts'

const NexusDashboard = () => {
  const { user } = useAuth()
  const { investigations, loadInvestigations, loading } = useInvestigation()
  const navigate = useNavigate()
  const [stats, setStats] = useState({
    totalInvestigations: 0,
    activeThreats: 0,
    responseTime: 0,
    accuracy: 99.7
  })

  useEffect(() => {
    loadInvestigations()
  }, [loadInvestigations])

  useEffect(() => {
    if (investigations.length > 0) {
      const active = investigations.filter(inv => inv.status === 'pending' || inv.status === 'running').length
      setStats({
        totalInvestigations: investigations.length,
        activeThreats: active,
        responseTime: Math.random() * 2 + 0.5, // Simulated response time
        accuracy: 99.7
      })
    }
  }, [investigations])

  const kpiCards = [
    {
      title: 'Total Investigations',
      value: stats.totalInvestigations.toString(),
      change: '+12%',
      changeType: 'positive',
      icon: Search,
      color: 'blue'
    },
    {
      title: 'Active Threats',
      value: stats.activeThreats.toString(),
      change: '-23%',
      changeType: 'positive',
      icon: AlertTriangle,
      color: 'orange'
    },
    {
      title: 'Response Time',
      value: `${stats.responseTime.toFixed(1)}s`,
      change: '+0.2s',
      changeType: 'neutral',
      icon: Clock,
      color: 'green'
    },
    {
      title: 'Detection Accuracy',
      value: `${stats.accuracy}%`,
      change: '+0.1%',
      changeType: 'positive',
      icon: Shield,
      color: 'purple'
    }
  ]

  const activityData = [
    { time: '00:00', threats: 12, investigations: 5 },
    { time: '04:00', threats: 8, investigations: 3 },
    { time: '08:00', threats: 25, investigations: 12 },
    { time: '12:00', threats: 35, investigations: 18 },
    { time: '16:00', threats: 42, investigations: 22 },
    { time: '20:00', threats: 28, investigations: 15 }
  ]

  const threatDistribution = [
    { name: 'Low Risk', value: 65, color: '#10b981' },
    { name: 'Medium Risk', value: 25, color: '#f59e0b' },
    { name: 'High Risk', value: 10, color: '#ef4444' }
  ]

  const getStatusIcon = (status) => {
    switch (status) {
      case 'completed': return <CheckCircle className="w-4 h-4 text-green-500" />
      case 'failed': return <XCircle className="w-4 h-4 text-red-500" />
      case 'pending':
      case 'running': return <Clock className="w-4 h-4 text-yellow-500" />
      default: return <AlertTriangle className="w-4 h-4 text-gray-500" />
    }
  }

  const getColorClasses = (color) => {
    const colors = {
      blue: 'from-blue-500 to-blue-600',
      orange: 'from-orange-500 to-orange-600',
      green: 'from-green-500 to-green-600',
      purple: 'from-purple-500 to-purple-600'
    }
    return colors[color] || colors.blue
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="nexus-container py-8">
        {/* Header */}
        <div className="mb-8">
          <div className="flex flex-col lg:flex-row lg:items-center lg:justify-between">
            <div>
              <h1 className="nexus-heading-2 mb-2">Security Command Center</h1>
              <p className="nexus-body text-gray-600">
                Welcome back, {user?.user_metadata?.full_name || user?.email?.split('@')[0] || 'User'}. 
                Here's your security overview.
              </p>
            </div>
            <div className="mt-4 lg:mt-0 flex space-x-3">
              <button
                onClick={() => navigate('/investigations/new')}
                className="nexus-btn nexus-btn-primary"
              >
                <Plus className="w-4 h-4 mr-2" />
                New Investigation
              </button>
              <button
                onClick={() => navigate('/investigations')}
                className="nexus-btn bg-white text-gray-700 border border-gray-300 hover:bg-gray-50"
              >
                <Eye className="w-4 h-4 mr-2" />
                View All
              </button>
            </div>
          </div>
        </div>

        {/* KPI Cards */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          {kpiCards.map((kpi, index) => {
            const Icon = kpi.icon
            return (
              <div key={index} className="nexus-card p-6">
                <div className="flex items-center justify-between mb-4">
                  <div className={`w-12 h-12 bg-gradient-to-r ${getColorClasses(kpi.color)} rounded-lg flex items-center justify-center`}>
                    <Icon className="w-6 h-6 text-white" />
                  </div>
                  <div className={`flex items-center text-sm ${
                    kpi.changeType === 'positive' ? 'text-green-600' : 
                    kpi.changeType === 'negative' ? 'text-red-600' : 'text-gray-600'
                  }`}>
                    <TrendingUp className="w-4 h-4 mr-1" />
                    {kpi.change}
                  </div>
                </div>
                <div>
                  <div className="text-2xl font-bold text-gray-900 mb-1">{kpi.value}</div>
                  <div className="text-sm text-gray-600">{kpi.title}</div>
                </div>
              </div>
            )
          })}
        </div>

        {/* Charts Section */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
          {/* Activity Chart */}
          <div className="nexus-card p-6">
            <div className="flex items-center justify-between mb-6">
              <h3 className="nexus-heading-4">24-Hour Activity</h3>
              <BarChart3 className="w-5 h-5 text-gray-400" />
            </div>
            <ResponsiveContainer width="100%" height={300}>
              <LineChart data={activityData}>
                <CartesianGrid strokeDasharray="3 3" stroke="#e5e7eb" />
                <XAxis dataKey="time" stroke="#6b7280" fontSize={12} />
                <YAxis stroke="#6b7280" fontSize={12} />
                <Tooltip
                  contentStyle={{
                    backgroundColor: 'white',
                    border: '1px solid #e5e7eb',
                    borderRadius: '8px',
                    boxShadow: '0 4px 6px -1px rgb(0 0 0 / 0.1)'
                  }}
                />
                <Line type="monotone" dataKey="threats" stroke="#ef4444" strokeWidth={2} dot={{ fill: '#ef4444' }} />
                <Line type="monotone" dataKey="investigations" stroke="#3b82f6" strokeWidth={2} dot={{ fill: '#3b82f6' }} />
              </LineChart>
            </ResponsiveContainer>
          </div>

          {/* Threat Distribution */}
          <div className="nexus-card p-6">
            <div className="flex items-center justify-between mb-6">
              <h3 className="nexus-heading-4">Threat Distribution</h3>
              <Activity className="w-5 h-5 text-gray-400" />
            </div>
            <ResponsiveContainer width="100%" height={300}>
              <PieChart>
                <Pie
                  data={threatDistribution}
                  cx="50%"
                  cy="50%"
                  innerRadius={60}
                  outerRadius={100}
                  paddingAngle={5}
                  dataKey="value"
                >
                  {threatDistribution.map((entry, index) => (
                    <Cell key={`cell-${index}`} fill={entry.color} />
                  ))}
                </Pie>
                <Tooltip
                  contentStyle={{
                    backgroundColor: 'white',
                    border: '1px solid #e5e7eb',
                    borderRadius: '8px',
                    boxShadow: '0 4px 6px -1px rgb(0 0 0 / 0.1)'
                  }}
                />
              </PieChart>
            </ResponsiveContainer>
            <div className="flex justify-center space-x-6 mt-4">
              {threatDistribution.map((item, index) => (
                <div key={index} className="flex items-center">
                  <div className="w-3 h-3 rounded-full mr-2" style={{ backgroundColor: item.color }}></div>
                  <span className="text-sm text-gray-600">{item.name}</span>
                </div>
              ))}
            </div>
          </div>
        </div>

        {/* Recent Investigations */}
        <div className="nexus-card">
          <div className="p-6 border-b border-gray-200">
            <div className="flex items-center justify-between">
              <h3 className="nexus-heading-4">Recent Investigations</h3>
              <button
                onClick={() => navigate('/investigations')}
                className="flex items-center text-blue-600 hover:text-blue-700 transition-colors"
              >
                <span className="text-sm font-medium">View all</span>
                <ArrowRight className="w-4 h-4 ml-1" />
              </button>
            </div>
          </div>
          
          {loading ? (
            <div className="p-8 text-center">
              <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mx-auto mb-4"></div>
              <p className="text-gray-500">Loading investigations...</p>
            </div>
          ) : investigations.length === 0 ? (
            <div className="p-8 text-center">
              <Search className="w-12 h-12 text-gray-400 mx-auto mb-4" />
              <h4 className="text-lg font-semibold text-gray-900 mb-2">No investigations yet</h4>
              <p className="text-gray-500 mb-4">Start your first security investigation to see results here.</p>
              <button
                onClick={() => navigate('/investigations/new')}
                className="nexus-btn nexus-btn-primary"
              >
                <Plus className="w-4 h-4 mr-2" />
                Start Investigation
              </button>
            </div>
          ) : (
            <div className="divide-y divide-gray-200">
              {investigations.slice(0, 5).map((investigation, index) => (
                <div
                  key={investigation.id}
                  className="p-6 hover:bg-gray-50 cursor-pointer transition-colors"
                  onClick={() => navigate(`/investigations/${investigation.id}`)}
                >
                  <div className="flex items-center justify-between">
                    <div className="flex-1">
                      <div className="flex items-center space-x-3 mb-2">
                        <h4 className="font-medium text-gray-900">
                          {investigation.target_url || investigation.title || `Investigation #${investigation.id?.slice(0, 8)}`}
                        </h4>
                        <div className="flex items-center space-x-1">
                          {getStatusIcon(investigation.status)}
                          <span className="text-sm text-gray-600 capitalize">{investigation.status}</span>
                        </div>
                        {investigation.risk_score !== undefined && (
                          <div className={`px-2 py-1 rounded-full text-xs font-medium ${
                            investigation.risk_score >= 70 ? 'bg-red-100 text-red-800' :
                            investigation.risk_score >= 30 ? 'bg-yellow-100 text-yellow-800' :
                            'bg-green-100 text-green-800'
                          }`}>
                            Risk: {investigation.risk_score}%
                          </div>
                        )}
                      </div>
                      <p className="text-sm text-gray-500">
                        Created {new Date(investigation.created_at).toLocaleDateString()} at {new Date(investigation.created_at).toLocaleTimeString()}
                      </p>
                    </div>
                    <ArrowRight className="w-5 h-5 text-gray-400" />
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>

        {/* Quick Actions */}
        <div className="mt-8">
          <div className="nexus-card p-6">
            <h3 className="nexus-heading-4 mb-6">Quick Actions</h3>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <button
                onClick={() => navigate('/investigations/new?type=website')}
                className="p-4 border border-gray-200 rounded-lg hover:border-blue-300 hover:bg-blue-50 transition-colors text-left"
              >
                <div className="w-10 h-10 bg-gradient-to-r from-blue-500 to-blue-600 rounded-lg flex items-center justify-center mb-3">
                  <Globe className="w-5 h-5 text-white" />
                </div>
                <h4 className="font-medium text-gray-900 mb-1">Website Analysis</h4>
                <p className="text-sm text-gray-600">Analyze websites for potential threats and vulnerabilities</p>
              </button>
              
              <button
                onClick={() => navigate('/investigations/new?type=email')}
                className="p-4 border border-gray-200 rounded-lg hover:border-green-300 hover:bg-green-50 transition-colors text-left"
              >
                <div className="w-10 h-10 bg-gradient-to-r from-green-500 to-green-600 rounded-lg flex items-center justify-center mb-3">
                  <Shield className="w-5 h-5 text-white" />
                </div>
                <h4 className="font-medium text-gray-900 mb-1">Email Security</h4>
                <p className="text-sm text-gray-600">Investigate suspicious emails and attachments</p>
              </button>
              
              <button
                onClick={() => navigate('/investigations/new?type=document')}
                className="p-4 border border-gray-200 rounded-lg hover:border-purple-300 hover:bg-purple-50 transition-colors text-left"
              >
                <div className="w-10 h-10 bg-gradient-to-r from-purple-500 to-purple-600 rounded-lg flex items-center justify-center mb-3">
                  <Eye className="w-5 h-5 text-white" />
                </div>
                <h4 className="font-medium text-gray-900 mb-1">Document Verification</h4>
                <p className="text-sm text-gray-600">Verify document authenticity and detect forgeries</p>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

export default NexusDashboard
